# log4j2内部自身的日志级别
status = debug
# 配置日志信息输出到哪里：err表示作为标准错误输出，还可以是一个文件路径或者一个URL
dest = err
# 配置名称
name = PropertiesConfig


#配置第三方包的日志，指定级别
logger.springframework.name=org.springframework
logger.springframework.level=error

logger.lettuce.name=io.lettuce
logger.lettuce.level=error

logger.netty.name=io.netty
logger.netty.level=error


# 自定义属性名称，以便在之后的配置中使用，如${filename}
property.filename = /usr/bgisoft/phoenix/logs/phoenix.log

# 级别过滤（过滤日志记录）
filter.threshold.type = ThresholdFilter
# 只记录debug级别以上的日志，大小写都可以
filter.threshold.level = debug

# 控制台类型的日志输出源
appender.console.type = Console
# 名称 ：唯一
appender.console.name = STDOUT
# 布局类型
appender.console.layout.type = PatternLayout
# 输出模板格式 这是springboot
#appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} -%5p ${PID:-} [%15.15t] %C{1.} [%t]: %m%n
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} -%5p ${PID:-} myrequestId=%X{requestId} [%15.15t] %C\:%L [%t]: %m%n

# 过滤级别 ThresholdFilter：低于级别的不输出
appender.console.filter.threshold.type = ThresholdFilter
# 记录日志的级别
appender.console.filter.threshold.level = debug


rootLogger.level = debug
rootLogger.appenderRef.stdout.ref = STDOUT